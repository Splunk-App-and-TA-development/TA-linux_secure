[sshd_subsystem_request]
REGEX = (sshd)\[\d+\]: ((subsystem) (request) for (S+))
FORMAT = process::$1 status::$2 request_type::$3 vendor_action::$4 subsystem::$5

[pam_session_change]
REGEX = (session) (\S+) for user (\S+)
FORMAT = pam_module_type::$1 vendor_action::$2 user::$3

[sshd_auth]
REGEX = (\S+) (\S+) for (\S+) from (\S+) port (\d+) ([^\:]+)(: (\S+) (\S+))?
FORMAT = vendor_action::$1 auth_method::$2 user::$3 src_ip::$4 src_port::$5 protocol::$6 algorithm::$8 public_key_fingerprint::$9

[pam_update_error]
REGEX = (\S+) returned (error) (\S+)
FORMAT = app::$1 subject::$2 body::$3

[pam_unix]
REGEX = pam_unix\([^:]+:[:^]+\)
FORMAT = pam_module::$1 pam_module_type::$2

[sshd_connection_close]
REGEX = (Connection closed) by (\S+)( \[(\S+)\])?
FORMAT = status::$1 src_ip::$2 state::$4

[sshd_rev_map_fail]
REGEX = (reverse map\S* check\S* \S+) for (\S+) (failed) - (.+)
FORMAT = subject::$1 src_host::$2 vendor_action::$3 body::$4

[pam_auth]
REGEX = authentication (\S+);
FORMAT = vendor_action::$1

[sshd_disconnect]
REGEX = (Received disconnect) from (\S+): (\d+): (.+)?
FORMAT = vendor_action::$1 src_ip::$2 sshd_session::$3 body::$4

[ssh_selinux_change_context]
REGEX = (ssh_selinux_change_context): (unparseable context kernel)( \[(\S+)\])?
FORMAT = vendor_action::$1 body::$2 state::$4

[sshd_invalid_user]
REGEX = (Invalid user) (\S+) from (\S+)
REGEX = ((\S+) (\S+) for )?([Ii]nvalid user) (\S+)( from (\S+)( port (\S+) (\S+))?)?
FORMAT = vendor_action::$2 auth_method::$3 vendor_action::$4 user::$5 src_ip::$7 src_port::$9 protocol::$10

[krb5_auth_principal]
REGEX = (\S+) to (\S+), krb5 principal (\S+)@(\S+) \((\S+)\)
FORMAT = vendor_action::$1 user::$2 src_user::$3 kerberos_domain::$4 status::$5

[krb5_auth]
REGEX = authentication (\S+) for '(\w+)' \((\w+)@(\S+)\)
FORMAT = vendor_action::$1 user::$2 src_user::$3 kerberos_domain::$4

[linux_secure_vendor_actions]
filename = linux_secure_vendor_actions.csv
